group 'com.infinera.metro.service.alarm'
version = '1.0-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '1.5.8.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.4.7'
    }
}

apply plugin: "com.jfrog.artifactory"
apply plugin: 'maven-publish'
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply plugin: 'java'
//apply plugin: 'docker'

compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

task buildAndPushDockerImage(type:Exec, dependsOn: [jar, build]) {
    //<path-to-application-jar> <docker-image-name> <docker-image-version> <docker-registry>
    workingDir 'src/main/docker'
//    commandLine "./build_and_push_docker_image.sh", "$buildDir/libs/$jar.archiveName", "$project.name", "$version", "$docker_registry"
    commandLine "./build_and_push_docker_image.sh", "$buildDir/libs/$jar.archiveName", "$project.name", "$version", "not_used_now"
}


/**
 * H2 settings
 * Use in-memory db h2 by default when starting application with bootRun
 */
def profiles = 'h2'
bootRun {
    args = ["--spring.profiles.active=" + profiles]
}

/** Test settings **/
test {
    //Show that tests are run in the command-line output
    testLogging {
        events 'started', 'passed'
    }
}

/** Artifactory settings **/
String repo = version.endsWith('SNAPSHOT') ? 'libs-snapshot-local' : 'libs-release-local'
artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = repo
            username = "${artifactory_user}"
            password = "${artifactory_password}"
        }
        defaults {
            publications ('api')
            //publishArtifacts = true           //Defaults to true according to documentation
        }
    }
}

/** Publishing settings **/
publishing {
    publications {
        impl(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            from components.java
        }
        api(MavenPublication) {
            groupId project.group
            artifactId project.name + '-api'
            version project.version
            artifact apiJar
        }
    }
}

//Task for publishing only api classes
task apiJar(type: Jar) {
    baseName "publishing-api"
    from sourceSets.main.output
    exclude '**/alarm/service/**'
    exclude '**/alarm/mapping/**'
    exclude '**/alarm/repository/**'
    include '**/alarm/controller/dto/**'
}

/** Repositories settings **/
repositories {
    mavenCentral()
}
 /** Dependency settings **/
dependencies {
    compile("org.apache.httpcomponents:httpclient:4.5.3")
    compile("org.projectlombok:lombok:1.16.18")
    compile("com.fasterxml.jackson.core:jackson-databind")
    compile("ma.glasnost.orika:orika-core:1.5.2")
    compile("com.google.guava:guava:23.0")
    compile("io.springfox:springfox-swagger2:2.7.0")
    compile("io.springfox:springfox-swagger-ui:2.7.0")
    compile("io.springfox:springfox-swagger-ui:2.7.0")
    compile("org.antlr:stringtemplate:4.0.2")
    compile("org.apache.commons:commons-lang3:3.7")

    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-jdbc")

    //https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    compile "org.mariadb.jdbc:mariadb-java-client:2.2.0"

    //runtime("com.h2database:h2")
    //To enable db access via sql tool
    compile("com.h2database:h2")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.apache.commons:commons-math3:3.6.1")
    testRuntime("com.jayway.jsonpath:json-path")
}
