apply plugin: 'java'
compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply plugin: 'docker'
apply plugin: 'maven-publish'

group 'se.infinera.metro.service.alarm'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '1.4.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

//Use in-memory db h2 by default when starting application with bootRun
def profiles = 'h2'
bootRun {
    args = ["--spring.profiles.active=" + profiles]
}

task buildDocker(type: Docker, dependsOn: build) {
//    push = true
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    addFile('src/main/docker/entrypoint.sh', '/entrypoint.sh')
    addFile('src/main/docker/wait-for-it.sh', '/wait-for-it.sh')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

task apiJar(type: Jar) {
    baseName "publishing-api"
    from sourceSets.main.output
    exclude '**/alarm/service/**'
    exclude '**/alarm/mapping/**'
    exclude '**/alarm/repository/**'
    include '**/alarm/controller/dto/**'
}

publishing {
    publications {
        impl(MavenPublication) {
            groupId 'se.infinera.metro.service.alarm'
            artifactId project.name
            version project.version

            from components.java
        }
        api(MavenPublication) {
            groupId 'se.infinera.metro.service.alarm'
            artifactId project.name + '-api'
            version project.version

            artifact apiJar
        }
    }
}

test {
    //Show that tests are run in the command-line output
    testLogging {
        events 'started', 'passed'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile("org.apache.httpcomponents:httpclient:4.5.2")
    compile("org.projectlombok:lombok:1.16.10")
    compile("com.fasterxml.jackson.core:jackson-databind")
    compile("ma.glasnost.orika:orika-core:1.4.6")
    compile("com.google.guava:guava:19.0")
    compile("io.springfox:springfox-swagger2:2.4.0")
    compile("io.springfox:springfox-swagger-ui:2.4.0")
    compile("io.springfox:springfox-swagger-ui:2.4.0")
    compile("org.antlr:stringtemplate:4.0.2")
    compile("org.apache.commons:commons-lang3:3.4")

    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-jdbc")

    //https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '1.5.2'

    //runtime("com.h2database:h2")
    //To enable db access via sql tool
    compile("com.h2database:h2")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.apache.commons:commons-math3:3.6.1")
    testRuntime("com.jayway.jsonpath:json-path")
}
