# NOTE:
# It is important to know that Spring Boot loads only one application.properties
# from the classpath. When we created another application.properties in
# src/test/resources,the previous one from src/main/resources was no longer
# loaded and thus none of the properties defined in here were merged in the
# environment.
# For this reason, you should configure all of the property values that are
# needed. In our case, we had to redefine the spring.jpa.hibernate.dll-auto
# property, even though it was already declared in
# src/main/resources/application.properties.

# TIP:
# Unlike application.properties where only one file can be loaded from the
# classpath, Spring supports a number of profile configurations, which will get all
# merged together during the application startup. So,instead of declaring a completely
# separate application.properties file,we could create an application-
# test.properties file and set an active profile to test while running the tests.

# This tells Hibernate to recreate the database on startup. I actually don't want to use ddl
# generation at all, but this is the only way I found to clear database after each
# integration test
spring:
  jpa:
    hibernate:
        ddl-auto: create-drop
  jackson:
      serialization:
        indent_output: true